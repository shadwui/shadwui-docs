{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sign-in-page-mongodb",
  "type": "registry:block",
  "title": "Sign In Page",
  "files": [
    {
      "path": "registry/src/auth/code/mongodb/pages/sign-in.tsx",
      "content": "\"use client\";\r\n\r\nimport * as z from \"zod\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { toast } from \"sonner\";\r\n\r\nimport {\r\n  Form,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/src/auth/code/mongodb/components/form\";\r\nimport { Input } from \"@/registry/src/components/ui/input\";\r\nimport { Button } from \"@/registry/src/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/src/components/ui/card\";\r\nimport { signInSchema } from \"@/schemas/auth-schema\";\r\nimport GoogleSignInButton from \"@/registry/src/auth/code/mongodb/components/goggle-button\";\r\nimport { signIn } from \"next-auth/react\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function SignInForm() {\r\n  const router = useRouter();\r\n\r\n  const form = useForm<z.infer<typeof signInSchema>>({\r\n    resolver: zodResolver(signInSchema),\r\n    defaultValues: {\r\n      identifier: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const onSubmit = async (data: z.infer<typeof signInSchema>) => {\r\n    const result = await signIn(\"credentials\", {\r\n      redirect: false,\r\n      identifier: data.identifier,\r\n      password: data.password,\r\n    });\r\n\r\n    if (result?.error) {\r\n      if (result.error === \"CredentialsSignin\") {\r\n        toast(\"Incorrect Credentials\");\r\n      } else {\r\n        toast(result.error);\r\n      }\r\n    }\r\n\r\n    if (result?.url) {\r\n      router.replace(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center h-screen\">\r\n      <Card className=\"min-w-96\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-2xl text-center font-bold\">\r\n            Login\r\n          </CardTitle>\r\n          <CardDescription className=\"text-center text-base\">\r\n            Login with your credentials\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Form {...form}>\r\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\r\n              <FormField\r\n                name=\"identifier\"\r\n                control={form.control}\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Email</FormLabel>\r\n                    <Input {...field} placeholder=\"example@gmail.com\" />\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <FormField\r\n                name=\"password\"\r\n                control={form.control}\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Password</FormLabel>\r\n                    <Input type=\"password\" {...field} />\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <Button className=\"w-full\" type=\"submit\">\r\n                Sign In\r\n              </Button>\r\n            </form>\r\n          </Form>\r\n\r\n          <h4 className=\"text-center text-muted-foreground\">or</h4>\r\n\r\n          <GoogleSignInButton />\r\n\r\n          <div className=\"text-center mt-4\">\r\n            <p>\r\n              Do not have an account{\" \"}\r\n              <Link\r\n                href=\"/sign-up\"\r\n                className=\"text-blue-600 hover:text-blue-800\"\r\n              >\r\n                Register\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:block",
      "target": "app/(auth)/sign-in/page.tsx"
    }
  ]
}